# Professional Modules Configuration

# This file defines the configuration for all professional education modules
# used by the orchestration workflow

modules:
  medical-school:
    name: "Medical School"
    slug: "medical-school"
    label: "tier:medical"
    color: "e74c3c"
    emoji: "üè•"
    description: "Medical education features including USMLE prep, clinical cases, and anatomy models"
    
    services:
      - api-core
      - assessment-engine
      - adaptive-learning
    
    features:
      - USMLE Question Bank
      - Clinical Case Simulations
      - 3D Anatomy Models
      - Medical Literature Integration
      - Diagnostic Reasoning Practice
      - Patient Case Studies
      - Pharmacology Database
      - Medical Imaging Tools
    
    database:
      tables:
        - users_medical_school
        - courses_medical_school
        - assessments_medical_school
        - submissions_medical_school
        - clinical_cases
        - anatomy_models
        - usmle_questions
    
    api_endpoints:
      - GET /api/v1/medical-school/profile/{user_id}
      - PUT /api/v1/medical-school/profile/{user_id}
      - GET /api/v1/medical-school/assessments
      - POST /api/v1/medical-school/assessments
      - GET /api/v1/medical-school/clinical-cases
      - GET /api/v1/medical-school/usmle-questions
    
    priority: high
    complexity: high

  law-school:
    name: "Law School"
    slug: "law-school"
    label: "tier:law"
    color: "3498db"
    emoji: "‚öñÔ∏è"
    description: "Legal education tools with case law database, legal writing feedback, and moot court"
    
    services:
      - api-core
      - assessment-engine
      - ai-tutor
    
    features:
      - Case Law Database
      - Legal Writing Feedback
      - Moot Court Simulations
      - Contract Analysis Tools
      - Bar Exam Preparation
      - Legal Research Tools
      - Citation Checker
      - Brief Writing Assistant
    
    database:
      tables:
        - users_law_school
        - courses_law_school
        - assessments_law_school
        - submissions_law_school
        - case_law_database
        - legal_documents
        - moot_court_cases
    
    api_endpoints:
      - GET /api/v1/law-school/profile/{user_id}
      - PUT /api/v1/law-school/profile/{user_id}
      - GET /api/v1/law-school/assessments
      - POST /api/v1/law-school/assessments
      - GET /api/v1/law-school/case-law
      - GET /api/v1/law-school/moot-court
    
    priority: high
    complexity: high

  mba:
    name: "MBA Program"
    slug: "mba"
    label: "tier:mba"
    color: "2ecc71"
    emoji: "üíº"
    description: "Business education platform with financial modeling, case studies, and team collaboration"
    
    services:
      - api-core
      - analytics-dashboard
      - adaptive-learning
    
    features:
      - Financial Modeling Tools
      - Business Case Library
      - Market Analysis Simulations
      - Team Collaboration Features
      - Executive Decision Games
      - Strategic Planning Tools
      - Leadership Assessments
      - Entrepreneurship Resources
    
    database:
      tables:
        - users_mba
        - courses_mba
        - assessments_mba
        - submissions_mba
        - business_cases
        - financial_models
        - team_projects
    
    api_endpoints:
      - GET /api/v1/mba/profile/{user_id}
      - PUT /api/v1/mba/profile/{user_id}
      - GET /api/v1/mba/assessments
      - POST /api/v1/mba/assessments
      - GET /api/v1/mba/business-cases
      - GET /api/v1/mba/financial-models
    
    priority: high
    complexity: medium

  engineering:
    name: "Engineering"
    slug: "engineering"
    label: "tier:engineering"
    color: "f39c12"
    emoji: "üîß"
    description: "Engineering education with circuit simulators, CAD integration, and FE/PE exam prep"
    
    services:
      - api-core
      - assessment-engine
      - adaptive-learning
    
    features:
      - Circuit Simulators
      - CAD Integration
      - FE/PE Practice Exams
      - Engineering Problem Sets
      - Lab Simulation Tools
      - Technical Drawing Tools
      - Materials Database
      - Project Management Tools
    
    database:
      tables:
        - users_engineering
        - courses_engineering
        - assessments_engineering
        - submissions_engineering
        - circuit_designs
        - cad_models
        - exam_questions
    
    api_endpoints:
      - GET /api/v1/engineering/profile/{user_id}
      - PUT /api/v1/engineering/profile/{user_id}
      - GET /api/v1/engineering/assessments
      - POST /api/v1/engineering/assessments
      - GET /api/v1/engineering/circuit-simulator
      - GET /api/v1/engineering/cad-projects
    
    priority: high
    complexity: high

# Workflow Configuration
workflow:
  base_branch: main
  run_tests: true
  node_version: "18"
  python_version: "3.11"
  
  notifications:
    slack: false
    email: false
    github: true
  
  concurrency:
    cancel_in_progress: true
  
  cache:
    enabled: true
    paths:
      - ~/.npm
      - ~/.cache/pip
      - "**/node_modules"

# Build Configuration
build:
  parallel: true
  fail_fast: false
  timeout_minutes: 30
  
  matrix:
    os: ubuntu-latest
  
  artifacts:
    retention_days: 30
    include:
      - BUILD_INFO.txt
      - database/schema.sql
      - docs/README.md

# PR Configuration
pull_request:
  auto_merge: false
  require_reviews: 2
  
  labels:
    default:
      - enhancement
      - automated
    additional:
      - priority:high
      - size:large
  
  template: |
    ## üéì {module_name} Module
    
    {description}
    
    ### ‚ú® Features Included
    
    {features}
    
    ### üèóÔ∏è What's Included
    
    - **Database Schema**: Complete PostgreSQL schema
    - **API Endpoints**: RESTful API with FastAPI
    - **Frontend Components**: React dashboard with TypeScript
    - **Documentation**: Comprehensive README
    - **Tests**: Test scaffolding
    
    ### üìä Services Involved
    
    {services}
    
    ### üîñ Version Information
    
    - **Version**: {version}
    - **Build Time**: {timestamp}
    - **Branch**: `{branch}`

# Testing Configuration
testing:
  enabled: true
  
  unit:
    command: pytest
    coverage: true
    min_coverage: 80
  
  integration:
    enabled: false
  
  e2e:
    enabled: false

# Database Configuration
database:
  engine: postgresql
  version: "14"
  
  common_tables:
    - users
    - courses
    - enrollments
    - course_modules
    - assignments
  
  indexes:
    auto_create: true
  
  triggers:
    auto_create: true

# API Configuration
api:
  framework: fastapi
  version: "0.104.0"
  
  auth:
    enabled: true
    method: jwt
  
  rate_limiting:
    enabled: true
    requests_per_minute: 60
  
  cors:
    enabled: true
    origins:
      - http://localhost:3000
      - http://localhost:5173

# Frontend Configuration
frontend:
  framework: react
  typescript: true
  version: "18"
  
  ui_library: shadcn-ui
  
  bundler: vite
  
  styling: tailwindcss

# Documentation Configuration
documentation:
  format: markdown
  
  include:
    - README.md
    - API.md
    - SETUP.md
    - TESTING.md
  
  api_docs:
    format: openapi
    version: "3.0.0"

# Feature Flags
features:
  ai_integration: true
  real_time: false
  file_upload: true
  video_streaming: false
  analytics: true

# Deployment Configuration
deployment:
  environment: development
  
  stages:
    - development
    - staging
    - production
  
  auto_deploy: false

# Monitoring Configuration
monitoring:
  enabled: true
  
  tools:
    - github_actions
  
  alerts:
    on_failure: true
    on_success: false

# Version Configuration
versioning:
  scheme: date_hash
  format: "v{date}-{hash}"
  
  date_format: "%Y%m%d"
  hash_length: 7

# Custom Scripts
scripts:
  pre_build: []
  post_build: []
  pre_pr: []
  post_pr: []

# Security Configuration
security:
  scan_dependencies: true
  scan_code: false
  
  secrets:
    check_for_leaks: true

# Metadata
metadata:
  version: "1.0.0"
  last_updated: "2024-10-29"
  maintained_by: "DevOps Team"
  documentation: ".github/workflows/README.md"
